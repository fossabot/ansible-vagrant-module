---

- stat: path={{out_boxfile}} get_checksum=false
  register: boxfilestats
- name: does box file exist?
  set_fact:
    boxfile_exists: "{{boxfilestats.stat.exists}}"
- name: should continue this? 
  set_fact:
    shouldrun: "{{overwrite}} == true or ({{overwrite}} == false and {{boxfile_exists}} == false)"


- name: install virtualbox  on linux
  package: name=virtualbox state=latest
  when: ansible_env.OS.lower().find('windows') == -1
- name: install virtualbox on windows
  win_chocolatey:
    name: virtualbox
    upgrade: true
  when: false #ansible_env.OS.lower().find('windows') != -1
    
- name: install vagrant on linux
  package: name=vagrant state=latest
  when: ansible_env.OS.lower().find('windows') == -1
- name: install vagrant on windows
  win_chocolatey:
    name: vagrant
    upgrade: true
  when: false #ansible_env.OS.lower().find('windows') != -1

#todo should resstart the windows machine
#install cygwin? ansible_system=CYGWINblahblah
#then get the lcoation of the bash interpreter..so that the following
#would work


- name: vagrantfile filename
  local_action: command basename {{in_vagrantfile}}
  register: vffn


- block:
    - name: tmp workdir
      command: mktemp -d
      register: twd
    - name: copy vagrantfile to remote
      copy: src={{in_vagrantfile}} dest={{twd.stdout}}

    - name: make vagrant box on the remote
      #the script changes to the vagrantfile dir.
      #so the out box is in the same dir as vagrantfile
      script: make_box.sh {{twd.stdout}}/{{vffn.stdout}} box
      when: shouldrun

    - name: get box from remote
      fetch:
        args:
          src: "{{twd.stdout}}/box"
          dest: "{{out_boxfile}}"
          flat: true
          fail_on_missing: true
      when: shouldrun

  always:
    - name: clean temp dir
      command: rm -rf {{twd.stdout}}
  
 


